/* /styles/nodes.css */
/* The Argent Codex: Theorycrafter's Utopia - Node Type & State Styles */

/* --- Node Status Indicators (in tooltip) --- */
.node-status-container {
    text-align: center;
    margin-bottom: var(--spacing-sm);
}
.node-status {
  display: inline-block;
  font-size: var(--font-size-base);
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 1px;
  padding: var(--spacing-xs) var(--spacing-lg);
  border-radius: 4px;
  border: 1px solid;
  width: auto;
}
.node-status.node-allocated {
  background-color: rgba(166, 227, 161, 0.15);
  color: var(--accent-tertiary);
  border-color: var(--accent-tertiary);
}
.node-status.node-allocatable {
  background-color: rgba(137, 180, 250, 0.15);
  color: var(--accent-primary);
  border-color: var(--accent-primary);
  animation: pulse 2s infinite;
}
.node-status.node-locked {
  background-color: rgba(230, 69, 83, 0.15);
  color: var(--accent-secondary);
  border-color: var(--accent-secondary);
}
.node-status.node-unallocated {
  background-color: rgba(108, 112, 134, 0.15);
  color: var(--text-muted);
  border-color: var(--border-secondary);
}

/* --- Node Type Icons (in panel list) --- */
.node-type-icon {
  flex-shrink: 0;
  width: 14px;
  height: 14px;
  border-radius: 50%;
  border: 2px solid;
  box-shadow: 0 0 5px 1px rgba(0,0,0,0.5);
}
.node-type-icon[data-node-type="Genesis"] { border-color: var(--capstone-color); }
.node-type-icon[data-node-type="Capstone"] { border-color: var(--capstone-color); background-color: rgba(249, 226, 175, 0.3); }
.node-type-icon[data-node-type="Schism"] { border-color: var(--schism-color); background-color: rgba(230, 69, 83, 0.3); }
.node-type-icon[data-node-type="Axiom"] { border-color: #f38ba8; }
.node-type-icon[data-node-type="Keystone"] { border-color: #f38ba8; }
.node-type-icon[data-node-type="Manifestation"] { border-color: #cba6f7; }
.node-type-icon[data-node-type="Minor"] { border-color: var(--text-muted); background-color: rgba(166, 173, 200, 0.2); }
.node-type-icon[data-node-type="GnosticRite"] { border-color: #f38ba8; background-color: rgba(243, 139, 168, 0.3); }
.node-type-icon[data-node-type="Bridge"] { border-color: #ff66ff; background-color: rgba(255,102,255,0.3); }
.node-type-icon[data-node-type="Synthesis"] { border-color: #66ffff; background-color: rgba(102,255,255,0.3); }


/* --- Special Node Info/Warning Boxes (in tooltip) --- */
.node-warning, .node-requirement {
  padding: var(--spacing-sm);
  border-radius: 6px;
  border-left: 4px solid;
}
.node-warning h4, .node-requirement h4 {
    margin-bottom: 4px;
}
.node-warning p, .node-requirement p {
    font-size: 0.85rem !important;
    color: var(--text-secondary) !important;
}
.node-warning {
  background-color: rgba(230, 69, 83, 0.1);
  border-color: var(--accent-secondary);
}
.node-warning h4 { color: var(--accent-secondary) !important; }
.node-requirement {
  background-color: rgba(249, 226, 175, 0.1);
  border-color: var(--capstone-color);
}
.node-requirement h4 { color: var(--capstone-color) !important; }

/* Enhanced Bridge Warning Styling */
.bridge-warning {
  background: linear-gradient(135deg, rgba(255, 0, 255, 0.1) 0%, rgba(255, 102, 255, 0.05) 100%);
  border: 2px solid rgba(255, 0, 255, 0.3);
  border-radius: 8px;
  padding: var(--spacing-md);
  margin: var(--spacing-sm) 0;
  position: relative;
  overflow: hidden;
}
.bridge-warning::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent 0%, rgba(255, 0, 255, 0.1) 50%, transparent 100%);
  animation: bridgeShimmer 3s infinite;
}
.bridge-warning h4 {
  color: #ff00ff;
  text-shadow: 0 0 10px rgba(255, 0, 255, 0.5);
  font-weight: bold;
  margin-bottom: var(--spacing-sm);
}
.bridge-warning p { color: var(--text-primary); margin-bottom: var(--spacing-sm); }
.bridge-warning p strong { color: #ff66ff; text-shadow: 0 0 5px rgba(255, 102, 255, 0.3); }

/* Enhanced Synthesis Info Styling */
.synthesis-info {
  background: linear-gradient(135deg, rgba(0, 255, 255, 0.1) 0%, rgba(102, 255, 255, 0.05) 100%);
  border: 2px solid rgba(0, 255, 255, 0.3);
  border-radius: 8px;
  padding: var(--spacing-md);
  margin: var(--spacing-sm) 0;
  position: relative;
  overflow: hidden;
}
.synthesis-info::before {
  content: '';
  position: absolute;
  top: 0; left: 0; right: 0; bottom: 0;
  background: radial-gradient(circle at 50% 50%, rgba(0, 255, 255, 0.05) 0%, transparent 70%);
  animation: synthesisPulse 4s ease-in-out infinite;
}
.synthesis-info h4 {
  color: #00ffff;
  text-shadow: 0 0 10px rgba(0, 255, 255, 0.5);
  font-weight: bold;
  margin-bottom: var(--spacing-sm);
}
.synthesis-info p { color: var(--text-primary); margin-bottom: var(--spacing-sm); }
.synthesis-info p strong { color: #66ffff; text-shadow: 0 0 5px rgba(102, 255, 255, 0.3); }

/* --- Canvas Node State Styling --- */
/* Note: These styles are applied programmatically in TalentTreeRenderer */

/* Selected Node State (Green Outline) */
.node-selected {
  /* Applied when node.isSelected === true */
  /* Green outline with enhanced glow effect */
}

/* Unselectable Node State (Red Outline) */
.node-unselectable {
  /* Applied when node cannot be selected (locked, missing prerequisites, etc.) */
  /* Red outline to indicate the node is not available */
}

/* Node State Transitions */
.node-state-transition {
  transition: all 0.3s ease-in-out;
}

/* Enhanced Node State Indicators */
.node-selected-indicator {
  /* Visual indicator for selected nodes */
  box-shadow: 0 0 20px rgba(166, 227, 161, 0.8);
  border: 3px solid #a6e3a1;
}

.node-unselectable-indicator {
  /* Visual indicator for unselectable nodes */
  box-shadow: 0 0 15px rgba(230, 69, 83, 0.6);
  border: 2px solid #e64553;
  opacity: 0.7;
}